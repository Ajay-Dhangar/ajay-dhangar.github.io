"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[81692],{20848:e=>{e.exports=JSON.parse('{"tag":{"label":"beginner-level","permalink":"/courses/tags/beginner-level","allTagsPath":"/courses/tags","count":13,"items":[{"id":"react-js/begginer-level/building-user-interfaces/lesson-3","title":"Basic styling techniques: Inline styles, internal stylesheets, external stylesheets, and CSS modules","description":"Learn how to apply basic styling techniques to your React components using inline styles and external stylesheets. Understand how to style elements, apply CSS properties, and create visually appealing user interfaces.","permalink":"/courses/react-js/begginer-level/building-user-interfaces/lesson-3"},{"id":"react-js/begginer-level/building-user-interfaces/lesson-1","title":"Conditional rendering: Displaying content based on state (if/else statements, ternary operator)","description":"Learn how to conditionally render content in React based on component state. Understand how to use if/else statements, the ternary operator, and logical operators to control the visibility of elements.","permalink":"/courses/react-js/begginer-level/building-user-interfaces/lesson-1"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-2","title":"Core concepts: Components, JSX, Virtual DOM","description":"In this lesson, we will learn about the core concepts of React, such as components, JSX, and Virtual DOM. We will also learn how to create a simple React component.","permalink":"/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-2"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-1","title":"Creating a simple \'Hello World\' app","description":"Learn how to create a simple \'Hello World\' app using React and understand the basic structure of a React component.","permalink":"/courses/react-js/begginer-level/building-your-first-react-app/lesson-1"},{"id":"react-js/begginer-level/introduction-to-forms/lesson-1","title":"Creating controlled components to manage form data with state","description":"learn how to create controlled components in React to manage form data using state. Controlled components allow you to handle form inputs and manage their state, enabling you to control and validate user input in React applications.","permalink":"/courses/react-js/begginer-level/introduction-to-forms/lesson-1"},{"id":"react-js/begginer-level/introduction-to-forms/lesson-2","title":"Handling form submissions (sending data or local processing)","description":"learn how to handle form submissions in React applications. Handling form submissions involves sending form data to a server or processing it locally within the application. In this lesson, we will explore how to handle form submissions in React using event handlers and state management.","permalink":"/courses/react-js/begginer-level/introduction-to-forms/lesson-2"},{"id":"react-js/begginer-level/working-with-components-and-data/lesson-3","title":"Handling user interactions with events (onClick, onChange, etc.)","description":"Learn how to handle user interactions in React using event handlers like onClick, onChange, and more. Understand how to respond to user actions and update the UI based on events.","permalink":"/courses/react-js/begginer-level/working-with-components-and-data/lesson-3"},{"id":"react-js/begginer-level/working-with-components-and-data/lesson-1","title":"Passing data between components with props (required and optional)","description":"learn how to pass data between components in React using props. Props are used to pass data from a parent component to a child component, enabling the sharing of information and functionality between different parts of the application.","permalink":"/courses/react-js/begginer-level/working-with-components-and-data/lesson-1"},{"id":"react-js/begginer-level/building-user-interfaces/lesson-2","title":"Rendering dynamic lists with arrays and the map() function","description":"Learn how to render dynamic lists in React using arrays and the map() function. Understand how to iterate over data, generate list items, and display dynamic content in your components.","permalink":"/courses/react-js/begginer-level/building-user-interfaces/lesson-2"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-3","title":"Setting up your development environment (Node.js, npm, code editor)","description":"Learn how to set up your development environment for React development by installing Node.js, npm, and a code editor.","permalink":"/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-3"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-2","title":"Understanding components and their structure (functional and class-based)","description":"Learn about the different types of components in React and understand their structure and usage in building React applications.","permalink":"/courses/react-js/begginer-level/building-your-first-react-app/lesson-2"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-3","title":"Using JSX for building UI elements","description":"Learn how to use JSX (JavaScript XML) to build UI elements in React and understand its syntax and features.","permalink":"/courses/react-js/begginer-level/building-your-first-react-app/lesson-3"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-1","title":"What is React and why use it?","description":"In this lesson, we will learn what React is and why we should use it. We will also learn about the history of React and its features.","permalink":"/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-1"}],"unlisted":false}}')}}]);