"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[94162],{21137:e=>{e.exports=JSON.parse('{"tag":{"label":"advanced-styling","permalink":"/courses/tags/advanced-styling","allTagsPath":"/courses/tags","count":3,"items":[{"id":"react-js/intermidiate-level/advanced-styling/lesson-2","title":"Advanced styling libraries (styled-components, tailwindcss, Material-UI) (Optional)","description":"Learn how to use advanced styling libraries like styled-components, tailwindcss, and Material-UI to style your React components. These libraries provide powerful tools and utilities for creating modern and responsive designs in your applications.","permalink":"/courses/react-js/intermidiate-level/advanced-styling/lesson-2"},{"id":"react-js/intermidiate-level/advanced-styling/lesson-3","title":"BEM naming convention for organized CSS classes","description":"Learn how to use the BEM (Block Element Modifier) naming convention to create organized and maintainable CSS classes in your React applications. BEM helps you structure your stylesheets by defining a clear naming convention for CSS classes, making it easier to understand and maintain your styles.","permalink":"/courses/react-js/intermidiate-level/advanced-styling/lesson-3"},{"id":"react-js/intermidiate-level/advanced-styling/lesson-1","title":"CSS Modules for component-scoped styling","description":"Learn how to use CSS Modules to create component-scoped styles in React applications. CSS Modules allow you to write modular and reusable styles for your components without worrying about global CSS conflicts.","permalink":"/courses/react-js/intermidiate-level/advanced-styling/lesson-1"}],"unlisted":false}}')}}]);