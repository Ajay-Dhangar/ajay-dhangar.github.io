"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[2421],{90974:e=>{e.exports=JSON.parse('{"tag":{"label":"this in nested functions","permalink":"/docs/tags/this-in-nested-functions","allTagsPath":"/docs/tags","count":1,"items":[{"id":"javascript/this-keyword-in-javascript","title":"this Keyword in JavaScript","description":"In this tutorial, we will learn about the `this` keyword in JavaScript. The `this` keyword refers to the object on which a function is being invoked. The value of `this` depends on how a function is called. We will see how `this` works in different contexts such as functions, methods, constructors, arrow functions, event handlers, callbacks, nested functions, global scope, strict mode, modules, classes, prototypes, async functions, promises, generators, iterators, destructuring, spread operator, rest parameters, default parameters, computed properties, dynamic properties, getters, setters, static methods, private methods, public methods, protected methods, instance methods, static properties, private properties, public properties, protected properties, instance properties, static accessors, private accessors, etc.","permalink":"/docs/javascript/this-keyword-in-javascript"}],"unlisted":false}}')}}]);