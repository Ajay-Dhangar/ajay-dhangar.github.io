"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[76316],{5312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=t(17624),r=t(4552);const a={id:"lesson-1",title:"Creating a simple 'Hello World' app",sidebar_label:"Lesson - 1",sidebar_position:1,description:"Learn how to create a simple 'Hello World' app using React and understand the basic structure of a React component.",tags:["courses","react-js","beginner-level","building-your-first-react-app","hello-world","react-component"]},l=void 0,i={id:"react-js/begginer-level/building-your-first-react-app/lesson-1",title:"Creating a simple 'Hello World' app",description:"Learn how to create a simple 'Hello World' app using React and understand the basic structure of a React component.",source:"@site/courses/react-js/begginer-level/building-your-first-react-app/lesson_1.md",sourceDirName:"react-js/begginer-level/building-your-first-react-app",slug:"/react-js/begginer-level/building-your-first-react-app/lesson-1",permalink:"/courses/react-js/begginer-level/building-your-first-react-app/lesson-1",draft:!1,unlisted:!1,tags:[{label:"courses",permalink:"/courses/tags/courses"},{label:"react-js",permalink:"/courses/tags/react-js"},{label:"beginner-level",permalink:"/courses/tags/beginner-level"},{label:"building-your-first-react-app",permalink:"/courses/tags/building-your-first-react-app"},{label:"hello-world",permalink:"/courses/tags/hello-world"},{label:"react-component",permalink:"/courses/tags/react-component"}],version:"current",lastUpdatedBy:"ajay-dhangar",lastUpdatedAt:171240282e4,sidebarPosition:1,frontMatter:{id:"lesson-1",title:"Creating a simple 'Hello World' app",sidebar_label:"Lesson - 1",sidebar_position:1,description:"Learn how to create a simple 'Hello World' app using React and understand the basic structure of a React component.",tags:["courses","react-js","beginner-level","building-your-first-react-app","hello-world","react-component"]},sidebar:"tutorialSidebar",previous:{title:"Module 2: Building Your First React App",permalink:"/courses/category/module-2-building-your-first-react-app"},next:{title:"Lesson - 2",permalink:"/courses/react-js/begginer-level/building-your-first-react-app/lesson-2"}},s={},c=[{value:"Getting started with React",id:"getting-started-with-react",level:2},{value:"Create React App",id:"create-react-app",level:2},{value:"Creating a &#39;Hello World&#39; component",id:"creating-a-hello-world-component",level:2},{value:"Rendering the component",id:"rendering-the-component",level:2},{value:"Running your React app",id:"running-your-react-app",level:2},{value:"Practice and Excercise time",id:"practice-and-excercise-time",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.M)(),...e.components},{BrowserWindow:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("BrowserWindow",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"In this lesson, we will learn how to create a simple 'Hello World' app using React. We will explore the basic structure of a React component and understand how to render content to the screen."}),"\n",(0,o.jsx)(n.h2,{id:"getting-started-with-react",children:"Getting started with React"}),"\n",(0,o.jsxs)(n.p,{children:["To get started with React, you need to have Node.js and npm (Node Package Manager) installed on your system. If you haven't installed them yet, follow the instructions in the ",(0,o.jsx)(n.a,{href:"/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-3",children:"Setting up your development environment"})," lesson. Once you have Node.js and npm installed, you can create a new React project using Create React App."]}),"\n",(0,o.jsx)(n.h2,{id:"create-react-app",children:"Create React App"}),"\n",(0,o.jsx)(n.p,{children:"Create React App is a tool that helps you set up a new React project with a single command. It provides a modern build setup with no configuration required. To create a new React project, open your terminal or command prompt and run the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx create-react-app hello-world-app\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This command will create a new directory called ",(0,o.jsx)(n.code,{children:"hello-world-app"})," with all the necessary files and dependencies to start building your React app."]}),"\n",(0,o.jsx)(n.h2,{id:"creating-a-hello-world-component",children:"Creating a 'Hello World' component"}),"\n",(0,o.jsxs)(n.p,{children:["Once you have created a new React project, navigate to the project directory and open it in your code editor. You will find a file called ",(0,o.jsx)(n.code,{children:"App.js"})," inside the ",(0,o.jsx)(n.code,{children:"src"})," directory. This file contains the main component of your React app."]}),"\n",(0,o.jsxs)(n.p,{children:["Let's create a new component called ",(0,o.jsx)(n.code,{children:"HelloWorld"})," inside ",(0,o.jsx)(n.code,{children:"App.js"})," to display a simple 'Hello World' message. Replace the content of ",(0,o.jsx)(n.code,{children:"App.js"})," with the following code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:'title="src/App.js"',children:"import React from 'react';\n\nfunction HelloWorld() {\n  return (\n    <div>\n      <h1>Hello World!</h1>\n    </div>\n  );\n}\n\nexport default HelloWorld;\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In this code snippet, we define a new functional component called ",(0,o.jsx)(n.code,{children:"HelloWorld"})," that returns a ",(0,o.jsx)(n.code,{children:"div"})," element containing an ",(0,o.jsx)(n.code,{children:"h1"})," element with the text 'Hello World!'. This is a simple React component that renders content to the screen."]}),"\n",(0,o.jsx)(n.h2,{id:"rendering-the-component",children:"Rendering the component"}),"\n",(0,o.jsxs)(n.p,{children:["To render the ",(0,o.jsx)(n.code,{children:"HelloWorld"})," component in your app, you need to import it in the ",(0,o.jsx)(n.code,{children:"App.js"})," file and include it in the JSX code. Update the ",(0,o.jsx)(n.code,{children:"App.js"})," file as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:'title="src/App.js"',children:"import React from 'react';\n\nfunction HelloWorld() {\n  return (\n    <div>\n      <h1>Hello World!</h1>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <HelloWorld />\n    </div>\n  );\n}\n\nexport default App;\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In this updated code snippet, we define a new functional component called ",(0,o.jsx)(n.code,{children:"App"})," that includes the ",(0,o.jsx)(n.code,{children:"HelloWorld"})," component. When you run your React app, the ",(0,o.jsx)(n.code,{children:"App"})," component will be rendered to the screen, and the ",(0,o.jsx)(n.code,{children:"HelloWorld"})," component will display the 'Hello World!' message."]}),"\n",(0,o.jsx)(n.h2,{id:"running-your-react-app",children:"Running your React app"}),"\n",(0,o.jsx)(n.p,{children:"To run your React app, open a terminal or command prompt in the project directory and run the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm start\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will start the development server and open your React app in a new browser window. You should see the 'Hello World!' message displayed on the screen."}),"\n",(0,o.jsx)(t,{minHeight:"400px",children:(0,o.jsx)("div",{children:(0,o.jsx)("h1",{children:"Hello World!"})})}),"\n",(0,o.jsx)(n.p,{children:"Congratulations! You have successfully created a simple 'Hello World' app using React. And you have learned how to create a basic React component and render it to the screen. Now practice creating more components and explore the different features of React."}),"\n",(0,o.jsx)(n.h2,{id:"practice-and-excercise-time",children:"Practice and Excercise time"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Modify the ",(0,o.jsx)(n.code,{children:"HelloWorld"})," component to display a different message. For example, 'Welcome to React!' or 'Hello, World!'. or may be your name (e.g., 'Hello, Ajay!')."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create a new component called ",(0,o.jsx)(n.code,{children:"Greeting"})," that takes a ",(0,o.jsx)(n.code,{children:"name"})," prop and displays a personalized greeting message. For example, if the ",(0,o.jsx)(n.code,{children:"name"})," prop is 'Alice', the component should display 'Hello, Alice!'."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Add the ",(0,o.jsx)(n.code,{children:"Greeting"})," component to the ",(0,o.jsx)(n.code,{children:"App"})," component and pass a ",(0,o.jsx)(n.code,{children:"name"})," prop to it. Test the app to see if the personalized greeting message is displayed correctly."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Experiment with different HTML elements and CSS styles to enhance the appearance of your app. Try adding a background color, changing the font size, or applying other styles to the components."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Share your 'Hello World' app with your friends or on social media. Let them know that you have started learning React and built your first app. And Join our ",(0,o.jsx)(n.a,{href:"https://discord.gg/5VjTyJcf",children:"Discord Community"})," to share your work and get feedback from other learners."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"That's it for this lesson! In the next lesson, we will explore more advanced concepts of React and build a more interactive app. Stay tuned!"}),"\n",(0,o.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(n.p,{children:"In this lesson, we learned how to create a simple 'Hello World' app using React. We explored the basic structure of a React component and understood how to render content to the screen. We also learned how to create a new React project using Create React App and run the app in the development server (localhost) to see the output."})]})}function p(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>i,M:()=>l});var o=t(11504);const r={},a=o.createContext(r);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);