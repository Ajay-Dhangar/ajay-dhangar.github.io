"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[32e3],{45795:e=>{e.exports=JSON.parse('{"tag":{"label":"conclusion of selection-sort","permalink":"/docs/tags/conclusion-of-selection-sort","allTagsPath":"/docs/tags","count":1,"items":[{"id":"dsa/arrays/arrays-selectionsort-in-dsa","title":"Arrays - Selection Sort in DSA","description":"Selection Sort is an in-place comparison sorting algorithm that divides the input list into two parts: the sublist of items already sorted and the sublist of items remaining to be sorted. It repeatedly finds the minimum element from the unsorted part and puts it at the beginning of the unsorted part. The algorithm maintains two subarrays in a given array. The subarray which is already sorted and the remaining subarray which is unsorted. In every iteration of selection sort, the minimum element from the unsorted subarray is picked and moved to the sorted subarray.","permalink":"/docs/dsa/arrays/arrays-selectionsort-in-dsa"}],"unlisted":false}}')}}]);